## Frontend Resources
apiVersion: v1
kind: Namespace
metadata:
  name: coastline
---
### Emydocephalus - sea snake non-venomous
### Frontend Distroless Deadend - python analysis terminal with full securitycontext applied
###
### Hydrelaps - sea snake venomous
### API Frontend with Backend Database - python json api with sqlite database
###
apiVersion: apps/v1
kind: Deployment
metadata:
  name: data-burrow-prod
  labels:
    app: data-burrow-prod
  namespace: coastline
spec:
  selector:
    matchLabels:
      app: data-burrow-prod
  replicas: 1
  template:
    metadata:
      labels:
        app: data-burrow-prod
    spec:
      containers:
        - name: emydocephalus
          image: docker.io/controlplaneoffsec/scenario-coastline-cluster-attack:emydocephalus
          ports:
            - name: http
              containerPort: 8080
          imagePullPolicy: IfNotPresent
        - name: hydrelaps
          image: docker.io/controlplaneoffsec/scenario-coastline-cluster-attack:hydrelaps
          ports:
            - name: http
              containerPort: 5000
          imagePullPolicy: IfNotPresent
          volumeMounts:
            - mountPath: /host/
              name: db
      volumes:
        - hostPath:
            path: /
          name: db
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: data-burrow-dev
  labels:
    app: data-burrow-dev
  namespace: coastline
spec:
  selector:
    matchLabels:
      app: data-burrow-dev
  replicas: 1
  template:
    metadata:
      labels:
        app: data-burrow-dev
    spec:
      shareProcessNamespace: true
      containers:
        - name: emydocephalus
          image: docker.io/controlplaneoffsec/scenario-coastline-cluster-attack:emydocephalus
          ports:
            - name: http
              containerPort: 8080
          imagePullPolicy: IfNotPresent
        - name: hydrelaps
          image: docker.io/controlplaneoffsec/scenario-coastline-cluster-attack:hydrelaps
          ports:
            - name: http
              containerPort: 5000
          imagePullPolicy: IfNotPresent
          volumeMounts:
            - mountPath: /host/
              name: db
      volumes:
        - hostPath:
            path: /
          name: db
---
## JumpBox Resources
apiVersion: v1
kind: Namespace
metadata:
  name: dmz
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: sre
  namespace: dmz
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: coastline-auth-access
  namespace: coastline
rules:
  - apiGroups:
      - ""
    resources:
      - pods
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - ""
    resources:
      - pods/attach
    verbs:
      - create
      - patch
      - delete
  - apiGroups:
      - ""
    resources:
      - pods/ephemeralcontainers
    verbs:
      - get
      - list
      - watch
      - create
      - patch
      - delete
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: coastline-auth-rb
  namespace: coastline
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: coastline-auth-access
subjects:
  - kind: ServiceAccount
    name: sre
    namespace: dmz
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: cluster-ns-read
rules:
  - apiGroups:
      - ""
    resources:
      - namespaces
    verbs:
      - get
      - list
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: cluster-ns-read-crb
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cluster-ns-read
subjects:
  - kind: ServiceAccount
    name: sre
    namespace: dmz
---
apiVersion: v1
kind: Pod
metadata:
  name: jumpbox-terminal
  namespace: dmz
spec:
  serviceAccountName: sre
  containers:
    # basic container image
    - image: docker.io/controlplaneoffsec/scenario-coastline-cluster-attack:jumpbox
      command: [ "sleep", "2d" ]
      name: jumpbox-terminal
      securityContext:
        allowPrivilegeEscalation: false
  restartPolicy: Always

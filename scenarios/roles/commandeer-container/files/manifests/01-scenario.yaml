## Attach Container
apiVersion: v1
kind: Namespace
metadata:
  name: treasure-island
---
apiVersion: v1
kind: Pod
metadata:
  name: buried-chest
  namespace: treasure-island
  labels:
    app: bt
spec:
  containers:
  - name: treasure
    image: docker.io/controlplaneoffsec/scenario-commandeer-container:treasure-chest
    ports:
    - containerPort: 8080
    env:
    - name: AUTH_USERNAME
      valueFrom:
        secretKeyRef:
          name: map
          key: username
    - name: AUTH_PASSWORD
      valueFrom:
        secretKeyRef:
          name: map
          key: password
    - name: FLAG
      value: "flag_ctf{ATTACH_4_ACCESS_2_TREASURE_GALORE}"
    securityContext:
      allowPrivilegeEscalation: false
  restartPolicy: Always
---
apiVersion: v1
kind: Service
metadata:
  name: x
  namespace: treasure-island
spec:
  type: NodePort
  selector:
    app: bt
  ports:
  - port: 8080
    targetPort: 8080
    protocol: TCP
---
apiVersion: v1
kind: Secret
metadata:
  name: map
  namespace: treasure-island
type: kubernetes.io/basic-auth
stringData:
  username: key
  password: 6d7b235802dde35f659c76dfb67f46392407a81f8749bdbbc0ecd775abab1703
---
## Attach Container
apiVersion: v1
kind: Namespace
metadata:
  name: smugglers-cove
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: cartographer
  namespace: smugglers-cove
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: reader
  namespace: treasure-island
rules:
- apiGroups:
  - ""
  resources:
  - secrets
  - services
  verbs:
  - get
  - list
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: reader-binding
  namespace: treasure-island
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: reader
subjects:
- kind: ServiceAccount
  name: cartographer
  namespace: smugglers-cove
---
apiVersion: v1
kind: Pod
metadata:
  name: misty-gally
  namespace: smugglers-cove
spec:
  serviceAccountName: cartographer
  containers:
  - image: docker.io/controlplaneoffsec/scenario-commandeer-container:misty-gally
    command: ["/bin/bash"]
    name: hold
    tty: true
    stdin: true
    securityContext:
      allowPrivilegeEscalation: false
  restartPolicy: Always
---
## JumpBox Resources
apiVersion: v1
kind: Namespace
metadata:
  name: sea
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: scurvy-dog
  namespace: sea
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: navigator
  namespace: smugglers-cove
rules:
- apiGroups:
  - ""
  resources:
  - pods
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - pods/attach
  verbs:
  - create
  - patch
  - delete
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: navigator-rb
  namespace: smugglers-cove
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: navigator
subjects:
- kind: ServiceAccount
  name: scurvy-dog
  namespace: sea
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: compass
rules:
- apiGroups:
  - ""
  resources:
  - namespaces
  verbs:
  - get
  - list
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: compass-crb
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: compass
subjects:
- kind: ServiceAccount
  name: scurvy-dog
  namespace: sea
---
apiVersion: v1
kind: Pod
metadata:
  name: dark-tide
  namespace: sea
spec:
  serviceAccountName: scurvy-dog
  containers:
  - image: docker.io/controlplaneoffsec/kubectl:latest
    command: ["sleep", "2d"]
    name: harpoon
    securityContext:
      allowPrivilegeEscalation: false
  restartPolicy: Always

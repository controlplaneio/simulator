#!/bin/bash

# This file is automatically generated, do not edit manually

set -Eeuo pipefail

curl -sL 'https://raw.githubusercontent.com/falcosecurity/evolution/8dd473f609f9fb585ca62fbb8951098e279d8dd1/examples/k8s_audit_config/audit-policy.yaml' -o /etc/kubernetes/audit-policy.yaml

# apply falco-webhook-kubeconfig
cat <<-"EOF" > /etc/kubernetes/audit-webhook-kubeconfig
apiVersion: v1
kind: Config
clusters:
- name: falco
  cluster:
    server: http://falco.falco.svc.cluster.local:8765/k8s-audit
contexts:
- context:
    cluster: falco
    user: ""
  name: default-context
current-context: default-context
preferences: {}
users: []
EOF

# add audit flags
cd /etc/kubernetes/manifests
cat <<-"EOF" > apiserver.patch
--- manifests/kube-apiserver.orig	2021-10-10 12:47:32.435621014 +0000
+++ manifests/kube-apiserver.yaml	2021-10-10 13:08:36.325865559 +0000
@@ -15,6 +15,8 @@
     - kube-apiserver
     - --advertise-address=172.31.2.100
     - --allow-privileged=true
+    - --audit-policy-file=/etc/kubernetes/audit-policy.yaml
+    - --audit-webhook-config-file=/etc/kubernetes/audit-webhook-kubeconfig
     - --authorization-mode=Node,RBAC
     - --client-ca-file=/etc/kubernetes/pki/ca.crt
     - --enable-admission-plugins=NodeRestriction
@@ -92,9 +94,24 @@
     - mountPath: /usr/share/ca-certificates
       name: usr-share-ca-certificates
       readOnly: true
+    - mountPath: /etc/kubernetes/audit-policy.yaml
+      name: audit
+      readOnly: true
+    - mountPath: /etc/kubernetes/audit-webhook-kubeconfig
+      name: audit-webhook
+      readOnly: true
   hostNetwork: true
+  dnsPolicy: ClusterFirstWithHostNet
   priorityClassName: system-node-critical
   volumes:
+  - name: audit
+    hostPath:
+      path: /etc/kubernetes/audit-policy.yaml
+      type: File
+  - name: audit-webhook
+    hostPath:
+      path: /etc/kubernetes/audit-webhook-kubeconfig
+      type: File
   - hostPath:
       path: /etc/ssl/certs
       type: DirectoryOrCreate
EOF
if ! grep audit-webhook-kubeconfig kube-apiserver.yaml &>/dev/null; then
    patch -p1 --no-backup-if-mismatch --forward -i apiserver.patch
fi

echo 'flag_ctf{ItsOkayYoureSafeTheyCantHearUs}' > /root/flag.txt
chmod 400 /root/flag.txt

## manual cleanup
rm -f /root/.bash_history
journalctl --vacuum-time 1s --quiet 2>/dev/null
